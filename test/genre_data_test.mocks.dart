// Mocks generated by Mockito 5.1.0 from annotations
// in swivt_challenge/test/genre_data_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:swivt_challenge/core/failure.dart' as _i6;
import 'package:swivt_challenge/feature/home/infrastructure/entities/genre.dart'
    as _i5;
import 'package:swivt_challenge/feature/home/infrastructure/entities/movies.dart'
    as _i7;
import 'package:swivt_challenge/feature/home/infrastructure/repository/home_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [IHomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIHomeRepository extends _i1.Mock implements _i3.IHomeRepository {
  MockIHomeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.GenreResponse, _i6.Failure>> getGenre() =>
      (super.noSuchMethod(Invocation.method(#getGenre, []),
          returnValue: Future<_i2.Either<_i5.GenreResponse, _i6.Failure>>.value(
              _FakeEither_0<_i5.GenreResponse, _i6.Failure>())) as _i4
          .Future<_i2.Either<_i5.GenreResponse, _i6.Failure>>);
  @override
  _i4.Future<_i2.Either<_i7.MovieResponse, _i6.Failure>> getMoviesByGenre(
          {int? genreId, int? page}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getMoviesByGenre, [], {#genreId: genreId, #page: page}),
          returnValue: Future<_i2.Either<_i7.MovieResponse, _i6.Failure>>.value(
              _FakeEither_0<_i7.MovieResponse, _i6.Failure>())) as _i4
          .Future<_i2.Either<_i7.MovieResponse, _i6.Failure>>);
  @override
  _i4.Future<_i2.Either<_i7.MovieResponse, _i6.Failure>> getPopularMovies(
          {int? page}) =>
      (super.noSuchMethod(
          Invocation.method(#getPopularMovies, [], {#page: page}),
          returnValue: Future<_i2.Either<_i7.MovieResponse, _i6.Failure>>.value(
              _FakeEither_0<_i7.MovieResponse, _i6.Failure>())) as _i4
          .Future<_i2.Either<_i7.MovieResponse, _i6.Failure>>);
  @override
  _i4.Future<_i2.Either<_i7.MovieResponse, _i6.Failure>> getTrendingMovies(
          {int? page}) =>
      (super.noSuchMethod(
          Invocation.method(#getTrendingMovies, [], {#page: page}),
          returnValue: Future<_i2.Either<_i7.MovieResponse, _i6.Failure>>.value(
              _FakeEither_0<_i7.MovieResponse, _i6.Failure>())) as _i4
          .Future<_i2.Either<_i7.MovieResponse, _i6.Failure>>);
}
